#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TITLE_LEN 100
#define MAX_AUTHOR_LEN 100
#define MAX_BOOKS 100 // Maximum number of books the array can hold
typedef struct {
    int bookID;
    char title[MAX_TITLE_LEN];
    char author[MAX_AUTHOR_LEN];
    int year;
} Book;
void addBook(Book books[], int *count);
void searchBook(Book books[], int count, char title[]);
void displayBooks(Book books[], int count);
int main() {
    Book library[MAX_BOOKS]; 
    int bookCount = 0;     
    int option;     
    printf("--- Library Management System ---\n");
    do {
        printf("\nMenu:\n");
        printf("1. Add a new book\n");
        printf("2. Search a book by title\n");
        printf("3. Display all books\n");
        printf("4. Exit program\n");
        printf("Choose an option: ");
        if (scanf("%d", &option) != 1) {
            printf("Invalid input. Please enter a number.\n");
            while (getchar() != '\n');
            continue;
        }
        getchar();
        switch (option) {
            case 1:
                addBook(library, &bookCount);
                break;
            case 2:
            {
                char searchTitle[MAX_TITLE_LEN];
                printf("Enter Title to Search: ");
                if (fgets(searchTitle, MAX_TITLE_LEN, stdin) != NULL) {
                    searchTitle[strcspn(searchTitle, "\n")] = 0;
                }
                searchBook(library, bookCount, searchTitle);
                break;
            }
            case 3:
                displayBooks(library, bookCount);
                break;
            case 4:
                printf("Exiting program. Goodbye!\n");
                break;
            default:
                printf("Invalid option. Please choose a number between 1 and 4.\n");
                break;
        }
    } while (option != 4);
    return 0;
}
void addBook(Book books[], int *count) {
    if (*count >= MAX_BOOKS) {
        printf("Error: Library is full. Cannot add more books.\n");
        return;
    }
    printf("Enter Book ID: ");
    if (scanf("%d", &books[*count].bookID) != 1) {
        printf("Invalid input for Book ID.\n");
        while (getchar() != '\n'); 
        return;
    }
    getchar(); 
    printf("Enter Title: ");
    if (fgets(books[*count].title, MAX_TITLE_LEN, stdin) != NULL) {
        books[*count].title[strcspn(books[*count].title, "\n")] = 0;
    }
    printf("Enter Author: ");
    if (fgets(books[*count].author, MAX_AUTHOR_LEN, stdin) != NULL) {
        books[*count].author[strcspn(books[*count].author, "\n")] = 0;
    }
    printf("Enter Year: ");
    if (scanf("%d", &books[*count].year) != 1) {
        printf("Invalid input for Year.\n");
        while (getchar() != '\n');
        return;
    }
    while (getchar() != '\n');
    (*count)++;
    printf("Book added successfully!\n");
}
void searchBook(Book books[], int count, char title[]) {
    int found = 0;
    if (count == 0) {
        printf("The library is empty. Book not found.\n");
        return;
    }
    for (int i = 0; i < count; i++) {
        if (strcmp(books[i].title, title) == 0) {
            printf("Book ID: %d\n", books[i].bookID);
            printf("Title: %s\n", books[i].title);
            printf("Author: %s\n", books[i].author);
            printf("Year: %d\n", books[i].year);
            found = 1;
            break; 
        }
    }
    if (!found) {
        printf("Book not found.\n");
    }
}
void displayBooks(Book books[], int count) {
    if (count == 0) {
        printf("The library is currently empty.\n");
        return;
    }
    printf("\n--- List of All Books (%d total) ---\n", count);
    for (int i = 0; i < count; i++) {
        printf("Book %d:\n", i + 1);
        printf("Book ID: %d\n", books[i].bookID);
        printf("Title: %s\n", books[i].title);
        printf("Author: %s\n", books[i].author);
        printf("Year: %d\n", books[i].year);
        printf("-------------------------------\n");
    }
}
